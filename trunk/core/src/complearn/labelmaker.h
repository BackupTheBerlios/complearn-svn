/*
* Copyright (c) 2006 Rudi Cilibrasi, Rulers of the RHouse
* All rights reserved.     cilibrar@cilibrar.com
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the RHouse nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE RULERS AND CONTRIBUTORS "AS IS" AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL THE RULERS AND CONTRIBUTORS BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
#ifndef __DMLABELS_H
#define __DMLABELS_H

/*! \file labelmaker.h */

/** \brief Serializes a StringStack of distance matrix labels into a DataBlock
 *
 *  clLabelsDump() returns to DataBlock which then can be written to
 *  a file using the function clDatablockWriteToFile().  This resulting DataBlock
 *  is also appropriate when using the function clPackageDataBlocks().
 *
 *  To convert the resulting DataBlock back into an StringStack, use the
 *  clLabelsLoad() function.
 *  \param ss pointer to StringStack
 *  \return serialized DataBlock
 */
struct DataBlock *clLabelsDump(struct StringStack *ss);

/** \brief Converts DataBlock created by clLabelsDump() back into a StringStack
 *
 *  clLabelsLoad() will take as an argument a DataBlock, which was
 *  most likely created by the clLabelsDump() function, and convert the
 *  DataBlock into a StringStack. A pointer to the StringStack is returned.
 *
 *  An option to clLabelsLoad() is the fmustbe flag, which, if set to 1, forces
 *  the function to exit if the check for the special DMLabels tag created by
 *  clLabelsDump() fails.  If the tag is not found, an error message is printed
 *  to stdout. Set fmustbe to 0 to return NULL instead.
 *
 *  \param db pointer to a DataBlock
 *  \param fmustbe 1 if the DataBlock must contain the identifying DMLabels
 *  flag; 0 if not
 *  \return pointer to new StringStack
 */
struct StringStack *clLabelsLoad(struct DataBlock *db, int fmustbe);

/** \brief Returns StringStack of distance matrix labels from CompLearn binary
 *
 *  clbLabels() is a high level function which reads a CompLearn
 *  binary(clb) file, generated by the ncd -b command and returns a StringStack
 *  of labels for the distance matrix saved in the clb file.
 *  \param fname path to CompLearn binary file
 *  \return StringStack of distance matrix labels
 */
struct StringStack *clbLabels(char *fname);
struct StringStack *clbDBLabels(struct DataBlock *db);

struct DataBlock *clbLabelsDataBlock(char *fname);
struct StringStack *clbLabelsLoad(struct DataBlock *db);

/** \brief Returns StringStack of distance matrix labels from a ASCII text file
 *
 *  clTxtLabels() is a high level function which reads a text file,
 *  formatted in the same way as output from the ncd command, and returns a
 *  StringStack of labels for the distance matrix.
 *  \param fname path to text file
 *  \return StringStack of distance matrix labels
 */
struct StringStack *clTxtLabels(char *fname);

/** \brief Dumps a StringStack of commands into a serialized DataBlock
 *
 *  Used to capture commands when using the ncd and maketree commands.
 *  \param ss pointer to StringStack of commands
 *  \return DataBlock
 */
struct DataBlock *clCommandsDump(struct StringStack *ss);

/** \brief Returns StringStack of commands from a CompLearn binary file
 *
 *  get_clcmds() is a high level function which reads a CompLearn binary (clb)
 *  file, generated from the ncd -b command, and returns a StringStack of
 *  commands.
 *  \param fname path CompLearn binary file
 *  \return StringStack of commands
 */
struct StringStack *clbCommands(char *fname);

#endif
